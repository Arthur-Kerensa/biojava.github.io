=Check out code from SVN=

BioJava requires [http://subversion.tigris.org/ Subversion] (SVN) and [http://maven.apache.org/ Maven] for checking out the code and creating a build. Access is possible either via
 - Anonymous SVN or GIT access or
 - Developer SVN access (ssh account required) or
 - BioJava SNAPSHOT builds (anonymous, Maven required)

= Downloading and updating code via Anonymous SVN =

The code.open-bio.org server offers up read-only copies of source code repositories via anonymous SVN. A list of code repositories available via SVN can be seen here: http://code.open-bio.org/svnweb/index.cgi

===Checking out the latest BioJava code===

The following example shows how to obtain the latest BioJava codebase snapshot using anonymous SVN, it will check out the latest copy of biojava-live/ from the "SVN trunk" and will locally store it in a directory named "biojava" on your system:


 svn co http://code.open-bio.org/repos/biojava/biojava-live/trunk ./biojava

Anonymous checkouts are now hosted at [http://github.com/biojava/biojava read only mirror at github]. As such you can of course also use git to get a copy of the code:

 svn co http://svn.github.com/biojava/biojava.git ./biojava

or if you prefer GIT:

 git clone https://github.com/biojava/biojava.git


A list of all available projects in SVN can be obtained with:
 
 svn list http://code.open-bio.org/repos/biojava

===Troubleshooting Anonymous SVN===

If you encounter an error while using the SVN client or SVN Web interface, the likely cause is that our server is in the middle of replicating the repository from the primary source. While the mirror and replication process occurs, it is not unusual for SVN client functionality to break temporarily.

The final step of our codebase replication process is to explicitly re-verify the health and status of each repository, this process takes a few moments but while it occurs the repository is "locked" and unavailable for access.

    * Anonymous SVN repositories are updated/mirrored hourly from the primary developer server
    * Anonymous SVN repositories are verified and repaired (if necessary) every 20 minutes 

If a SVN client error occurs for longer than 20 minutes, please report this to: support@helpdesk.open-bio.org

= Downloading and updating code via Developer SVN = 

For the developer access a user account on the dev.open-bio server is required. The SVN checkout works like this:

 svn co svn+ssh://dev.open-bio.org/home/svn-repositories/biojava/biojava-live/trunk/  ./biojava-live

after initial checkout, you can change into the local ./biojava-live directory and execute SVN commands without the URL. For example:

 svn update
 svn commit -m "comments for this commit"
 svn add myfile.java

If your local user name is different from the one one the open-bio server you can edit

 ~/.ssh/config

and add
 
 host dev.open-bio.org
 user blablabla

== Eclipse Tips ==

SVN plugin: Get the subclipse SVN plugin from [http://subclipse.tigris.org/ http://subclipse.tigris.org/]
Maven plugin: We recommend getting the m2eclipse plugin from [http://m2eclipse.sonatype.org/ http://m2eclipse.sonatype.org/] 

Once you have both plugins installed, you can browse through the SVN repository within eclipse, right-click on the biojava/trunk folder and check out as a Maven project.

For more details see [[BioJava3_eclipse]].

== SVN and EOL  ==

Unlike CVS, Subversion does not automatically convert End Of Line characters, which can cause problems
across different operating systems. To work around this SVN is providing the 
[http://svnbook.red-bean.com/en/1.1/ch07s02.html#svn-ch-7-sect-2.3.5 eol-style property].

An easy way to ensure that new files are added with this property present is to configure the auto-props in your

 ~/.subversion/config 

file. By default this will contain commented-out configuration entries for enabling auto-props. Change this to 

<pre>
### Section for configuring miscellaneous Subversion options.
[miscellany]
### Set enable-auto-props to 'yes' to enable automatic properties
### for 'svn add' and 'svn import', it defaults to 'no'.
### Automatic properties are defined in the section 'auto-props'.
enable-auto-props = yes

### Section for configuring automatic properties.
### The format of the entries is:
###   file-name-pattern = propname[=value][;propname[=value]...]
### The file-name-pattern can contain wildcards (such as '*' and
### '?').  All entries which match will be applied to the file.
### Note that auto-props functionality must be enabled, which
### is typically done by setting the 'enable-auto-props' option.
[auto-props]
*.bat = svn:mime-type=text/plain;svn:eol-style=native
*.bmp = svn:mime-type=image/bmp
*.c = svn:mime-type=text/plain;svn:eol-style=native
*.css = svn:mime-type=text/css;svn:eol-style=native
*.cpp = svn:mime-type=text/plain;svn:eol-style=native
*.cxx = svn:mime-type=text/plain;svn:eol-style=native
*.dylan = svn:mime-type=text/plain;svn:eol-style=native
*.dylgram = svn:mime-type=text/plain;svn:eol-style=native
*.el = svn:mime-type=text/plain;svn:eol-style=native
*.gif = svn:mime-type=image/gif
*.h = svn:mime-type=text/plain;svn:eol-style=native
*.hdp = svn:mime-type=text/plain;svn:eol-style=native
*.htm = svn:mime-type=text/html;svn:eol-style=native
*.html = svn:mime-type=text/html;svn:eol-style=native
*.ico = svn:mime-type=image/x-icon
*.idl = svn:mime-type=text/plain;svn:eol-style=native
*.intr = svn:mime-type=text/plain;svn:eol-style=native
*.jam = svn:mime-type=text/plain;svn:eol-style=native
*.java = svn:mime-type=text/plain;svn:eol-style=native
*.jpeg = svn:mime-type=image/jpeg
*.jpg = svn:mime-type=image/jpeg
*.lid = svn:mime-type=text/plain;svn:eol-style=native
*.lisp = svn:mime-type=text/plain;svn:eol-style=native
*.lout = svn:mime-type=text/plain;svn:eol-style=native
*.m4 = svn:mime-type=text/plain;svn:eol-style=native
*.pdf = svn:mime-type=application/pdf
*.pl = svn:mime-type=text/plain;svn:eol-style=native;svn:executable
*.png = svn:mime-type=image/png
*.py = svn:mime-type=text/plain;svn:eol-style=native;svn:executable
*.rc = svn:mime-type=text/plain;svn:eol-style=native
*.sgm = svn:mime-type=text/sgml;svn:eol-style=native
*.sgml = svn:mime-type=text/sgml;svn:eol-style=native
*.sh = svn:mime-type=text/plain;svn:eol-style=native;svn:executable
*.spec = svn:mime-type=text/plain;svn:eol-style=native
*.sql = svn:mime-type=text/plain;svn:eol-style=native
*.tif = svn:mime-type=image/tiff
*.tiff = svn:mime-type=image/tiff
*.text = svn:mime-type=text/plain;svn:eol-style=native
*.txt = svn:mime-type=text/plain;svn:eol-style=native
*.xhtml = svn:eol-style=native
*.xml = svn:mime-type=text/xml;svn:eol-style=native
INSTALL = svn:mime-type=text/plain;svn:eol-style=native
README = svn:mime-type=text/plain;svn:eol-style=native

</pre>

= Maven SNAPSHOT builds =

BioJava now also provides SNAPSHOT builds of the latest code base. This is created automatically by the automated build system at [http://emmy.rcsb.org:8080/cruisecontrol/
].  In order to install .jar files from this repository automatically for your Maven projects, add the following lines to your project .pom file:

<pre>
<repositories>
	<repository>
		<id>biojava-maven-repo</id>
		<name>BioJava repository</name>
		<url>http://www.biojava.org/download/maven/</url>
		<snapshots>
			<enabled>true</enabled>
		</snapshots>
		<releases>
			<enabled>true</enabled>
		</releases>
	</repository>
</repositories>
</pre>


= Links =
See also the [http://www.open-bio.org/wiki/SVN-Developers SVN developers page in the OBF wiki]

=Repository News=
==BioJava migrating to Maven==

BioJava is currently in the process of getting migrated to Maven and split up into sub-modules. You can track the status of this at [[BioJava:MavenMigration]]

As of September 2009 the new mavenized code is available through the main biojava ''trunk''. The old ant-based biojava is still available in the branch ''trunk_1_7_ant''

==BioJava now using SVN==

As of January 2008 BioJava has moved the version control system from 
CVS to Subversion (svn).  All Biojava modules, branches 
and tags and the history of the files has been imported into the new repository. For more detailed documentation about the procedure used for the CVS to SVN migration see
[[SVNmigrationHistory]]